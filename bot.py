import asyncio
import aiohttp
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

API_TOKEN = "7988730577:AAE6aA6WWt2JL0rNk6eXrTjGn7sXLNDsnAo"
API_URL = "http://217.25.93.75:8080/api/cars/"  # —Ç–≤–æ–π —Å–µ—Ä–≤–µ—Ä
TEMP_IMAGE = "temp_car.png"  # –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üöò –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—ã", callback_data="show_cars")]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–∞—à–∏–Ω üöó", reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "show_cars")
async def show_cars(callback: types.CallbackQuery):
    async with aiohttp.ClientSession() as session:
        async with session.get(API_URL) as resp:
            cars = await resp.json()

    if not cars:
        await callback.message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –º–∞—à–∏–Ω –≤ –±–∞–∑–µ ‚ùå")
        return

    for car in cars:
        caption = f"""
    üöó {car.get('brand', '')} {car.get('model', '')}
    üí∞ –¶–µ–Ω–∞: {car.get('price', '')} KGS
    üìç –ì–æ—Ä–æ–¥: {car.get('city', '')}
    üìù {car.get('description', '')}
    """
        image_url = car.get("image", "")

        if image_url and not image_url.startswith("http"):
            image_url = f"http://217.25.93.75:8080{image_url}"

        try:
            if image_url:
                # ‚úÖ –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—ë–º URL
                await callback.message.answer_photo(photo=image_url, caption=caption)
            else:
                await callback.message.answer(f"{caption}\n‚ùå –§–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
        except Exception as e:
            await callback.message.answer(f"{caption}\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")


    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if os.path.exists(TEMP_IMAGE):
        os.remove(TEMP_IMAGE)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
