import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

API_TOKEN = "7988730577:AAE6aA6WWt2JL0rNk6eXrTjGn7sXLNDsnAo"
API_URL = "http://127.0.0.1:8000/api/cars/"  # –º–µ–Ω—è–π –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöò –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—ã", callback_data="show_cars")]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–∞—à–∏–Ω üöó", reply_markup=keyboard)

# üìå –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω
@dp.callback_query(lambda c: c.data == "show_cars")
async def show_cars(callback: types.CallbackQuery):
    async with aiohttp.ClientSession() as session:
        async with session.get(API_URL) as resp:
            cars = await resp.json()

    if not cars:
        await callback.message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –º–∞—à–∏–Ω –≤ –±–∞–∑–µ ‚ùå")
        return

    for car in cars:
        caption = f"""
üöó {car['brand']} {car['model']}
üí∞ –¶–µ–Ω–∞: {car['price']} KGS
üìç –ì–æ—Ä–æ–¥: {car['city']}
üìù {car['description']}
"""
        # ‚úÖ —Ç–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ –ø–æ URL
        await callback.message.answer_photo(photo=car["image"], caption=caption)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
