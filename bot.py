import telebot
from telebot import types
import requests

# üîë –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = "7988730577:AAE6aA6WWt2JL0rNk6eXrTjGn7sXLNDsnAo"
bot = telebot.TeleBot(API_TOKEN)

# üîó API Django
API_URL = "http://217.25.93.75/api/cars/"  # —Å—Ç—Ä–æ–≥–æ —Å–æ —Å–ª—ç—à–µ–º!

# --- –ö–ù–û–ü–ö–ò ---

CATEGORY_KEYBOARD = [
    ["–°–µ–¥–∞–Ω", "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫"],
    ["–•—ç—Ç—á–±–µ–∫", "–ö—É–ø–µ"],
    ["–ú–∏–Ω–∏–≤—ç–Ω", "–ü–∏–∫–∞–ø"],
    ["–£–Ω–∏–≤–µ—Ä—Å–∞–ª", "–î—Ä—É–≥–æ–µ"],
]

FUEL_KEYBOARD = [
    ["–ë–µ–Ω–∑–∏–Ω", "–î–∏–∑–µ–ª—å"],
    ["–ì–∞–∑", "–≠–ª–µ–∫—Ç—Ä–æ", "–ì–∏–±—Ä–∏–¥"],
]

PRICE_KEYBOARD = [
    ["0-10000", "10000-15000"],
    ["15000-20000", "20000-30000"],
    ["30000-100000"],
]

CATEGORY_MAP = {
    "–°–µ–¥–∞–Ω": "sedan",
    "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫": "suv",
    "–•—ç—Ç—á–±–µ–∫": "hatchback",
    "–ö—É–ø–µ": "coupe",
    "–ú–∏–Ω–∏–≤—ç–Ω": "minivan",
    "–ü–∏–∫–∞–ø": "pickup",
    "–£–Ω–∏–≤–µ—Ä—Å–∞–ª": "wagon",
    "–î—Ä—É–≥–æ–µ": "other",
}

FUEL_MAP = {
    "–ë–µ–Ω–∑–∏–Ω": "petrol",
    "–î–∏–∑–µ–ª—å": "diesel",
    "–ì–∞–∑": "gas",
    "–≠–ª–µ–∫—Ç—Ä–æ": "electric",
    "–ì–∏–±—Ä–∏–¥": "hybrid",
}

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
user_filters = {}


def make_keyboard(buttons):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for row in buttons:
        markup.row(*row)
    return markup


# --- –°–¢–ê–†–¢ ---
@bot.message_handler(commands=["start"])
def send_welcome(message):
    user_filters[message.chat.id] = {}
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! üöò –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä—ë–º —Ç–µ–±–µ –∞–≤—Ç–æ.\n–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=make_keyboard(CATEGORY_KEYBOARD),
    )


# --- –®–ê–ì 1: –ö–∞—Ç–µ–≥–æ—Ä–∏—è ---
@bot.message_handler(func=lambda msg: msg.text in CATEGORY_MAP)
def choose_category(message):
    user_filters[message.chat.id]["category"] = message.text
    bot.send_message(
        message.chat.id,
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞:",
        reply_markup=make_keyboard(FUEL_KEYBOARD),
    )


# --- –®–ê–ì 2: –¢–æ–ø–ª–∏–≤–æ ---
@bot.message_handler(func=lambda msg: msg.text in FUEL_MAP)
def choose_fuel(message):
    user_filters[message.chat.id]["fuel"] = message.text
    bot.send_message(
        message.chat.id,
        "–£–∫–∞–∂–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã:",
        reply_markup=make_keyboard(PRICE_KEYBOARD),
    )


# --- –®–ê–ì 3: –¶–µ–Ω–∞ ---
@bot.message_handler(func=lambda msg: any(msg.text.startswith(x.split("-")[0]) for x in ["0-10000", "10000-15000", "15000-20000", "20000-30000", "30000-100000"]))
def choose_price(message):
    chat_id = message.chat.id
    price_range = message.text.split("-")
    min_price = int(price_range[0])
    max_price = int(price_range[1]) if len(price_range) > 1 else 100000000

    user_filters[chat_id]["price"] = (min_price, max_price)

    bot.send_message(chat_id, "üîé –ò—â—É –∞–≤—Ç–æ –ø–æ —Ç–≤–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º...")

    send_filtered_cars(chat_id)


# --- –ü–æ–∏—Å–∫ –∞–≤—Ç–æ ---
def send_filtered_cars(chat_id):
    try:
        response = requests.get(API_URL)
        cars = response.json()
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: {e}")
        return

    filters = user_filters.get(chat_id, {})
    results = []

    for car in cars:
        if (
            car["category"] == CATEGORY_MAP[filters["category"]]
            and car["fuel_type"] == FUEL_MAP[filters["fuel"]]
            and filters["price"][0] <= float(car["price"]) <= filters["price"][1]
        ):
            results.append(car)

    if not results:
        bot.send_message(chat_id, "üö´ –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —Ç–≤–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.")
        return

    for car in results:
        caption = (
            f"üöó {car['brand']} {car['model']}\n"
            f"üìÖ –ì–æ–¥: {car['year']}\n"
            f"‚öôÔ∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: {car['engine_capacity']} –ª\n"
            f"‚õΩ –¢–æ–ø–ª–∏–≤–æ: {dict(FUEL_MAP.items())[[k for k,v in FUEL_MAP.items() if v==car['fuel_type']][0]]}\n"
            f"üí∞ –¶–µ–Ω–∞: {car['price']} KGS\n"
            f"üìù {car['description']}\n"
        )

        if car["image"]:
            try:
                bot.send_photo(chat_id, car["image"], caption=caption)
            except:
                bot.send_message(chat_id, caption)
        else:
            bot.send_message(chat_id, caption)


print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
